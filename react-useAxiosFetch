import { useState, useEffect } from 'react';
import axios from 'axios';



export const useAxios = (axiosParams) => {
    const [response, setResponse] = useState(undefined);
    const [error, setError] = useState('');
    const [loading, setloading] = useState(true);
    
    // { url, method, body = null, headers = null } are the params.
    // axios[method](url, JSON.parse(headers), JSON.parse(body))

    const fetchData = async (params) => {
      try {
       const result = await axios.request(params);
       setResponse(result.data);
       } catch( error ) {
         setError(error);
       } finally {
         setLoading(false);
       }
    };

    useEffect(() => {
        fetchData(axiosParams);
    }, []); // execute once only

    return { response, error, loading };
};




const useAxiosFetch = (url) => {

  const [data, setData] = useState("");
  
  useEffect(() => {
    let loading = true;
    const abortController = new AbortController();
    (async () => {
      const res = await axios.fetch(url, {
        signal: abortController.signal,
        config: 'other configuration here'
      });
      const data = await res.json();
      if (loading) setData(data);
    })();

    return ( () => {
      loading = false;
      abortController.abort();
   }) ();;
  }, []);
  // }, [url]);

  return data;
};
